/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "swe_keys.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT     0

//#define GAMING      1

#define SYMBOLS_SWE 1
#define FUNC        2
#define NUMBER      3
#define SETTINGS    4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hs: homerow_mods_slow {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_SLOW";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        lt_spc: lt_spc {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_SPC";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    cond_layers {
        compatible = "zmk,conditional-layers";

        // Define SETTINGS layer as tri-state

        func_tristate {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };

    /*           40 Keys
╭─────────────────╮ ╭─────────────────╮
│    0  1  2  3  4│ │ 5  6  7  8  9   │
│10 11 12 13 14 15│ │16 17 18 19 20 21│
│22 23 24 25 26 27│ │28 29 30 31 32 33│
╰────────╮34 35 36│ │37 38 39╭────────╯
         ╰────────╯ ╰────────╯       */

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp TAB>;
        };

        /*	combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
	*/

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <24 25>;
            bindings = <&kp LGUI>;
        };

        escape2 {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            timeout-ms = <50>;
        };

        tab_right {
            bindings = <&kp TAB>;
            key-positions = <16 17>;
            timeout-ms = <10>;
        };

        /*        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        }; */
    };

    macros {
        alt_f1_1: alt_f1_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(F1) &kp LA(NUMBER_1)>;
            label = "ALT_F1_1";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp Q  &kp W  &kp E            &kp R  &kp T         &kp Y       &kp U  &kp I      &kp O    &kp P
&kp LCTRL   &kp A  &kp S  &kp D            &kp F  &kp G         &kp H       &kp J  &kp K      &kp L    &kp SEMI  &kp RET
&kp LSHIFT  &kp Z  &kp X  &kp C            &kp V  &kp B         &kp N       &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                          &lt_spc 2 SPACE  &mo 3  &kp LEFT_ALT  &kp DELETE  &mo 1  &kp SPACE
            >;
        };

        /*
        gaming_layer {
            bindings = <
                        &kp N1  &kp N2  &kp N3  &kp N4     &kp N5                     &kp J                 &kp L        &kp U         &kp Y       &kp BSPC
            &kp LSHIFT  &kp Q   &kp W   &kp E   &kp R      &kp Y                      &kp M                 &hm RCTRL N  &hm RSHIFT E  &hm RALT I  &hs RGUI O  &none
            &kp TAB     &kp A   &kp S   &kp D   &kp F      &kp G                      &kp Z                 &kp N        &kp E         &kp I       &kp O       &none
                                                &kp LCTRL  &kp SPACE  &kp ESC   &none &lt SYMBOLS_SWE BSPC  &lt FUNC ESC
            >;
        };
*/

        symbols {
            bindings = <
              &kp EXCLAMATION       &kp AT_SIGN      &kp HASH              &kp DOLLAR             &kp PERCENT  &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp GRAVE     &kp LEFT_BRACE        &kp RIGHT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE     &kp UNDERSCORE  &kp PLUS       &kp MINUS     &kp EQUAL         &kp DOUBLE_QUOTES  &kp SQT
&kp CAPSLOCK  &kp NON_US_BACKSLASH  &kp TILDE        &none                 &none                  &none        &none           &none          &none         &none             &none              &none
                                                     &none                 &to 5                  &trans       &trans          &trans         &none
            >;
        };

        func_layer {
            bindings = <
       &none      &kp LS(LG(S))  &none          &kp LC(INSERT)     &kp LS(INSERT)   &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END    &none
&none  &alt_f1_1  &kp LS(LC(C))  &kp LS(LC(R))  &none              &none            &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &none  &none
&none  &none      &none          &kp K_MUTE     &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PREV      &kp C_PP        &kp C_NEXT    &none      &none  &none
                                 &none          &trans             &trans           &trans          &trans          &none
            >;
        };

        number_layer {
            bindings = <
       &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7        &kp F8        &kp F9        &kp F10
&none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &none
&none  &kp F11       &kp F12       &none         &none         &none         &none         &none         &kp COMMA     &kp PERIOD    &kp SLASH     &none
                                   &none         &trans        &trans        &trans        &none         &none
            >;
        };

        settings_layer {
            bindings = <
       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &ext_power EP_ON  &ext_power EP_OFF  &none  &none  &none
&none  &bt BT_CLR    &none         &none         &none         &none         &none             &none              &none  &none  &none  &to 0
&none  &out OUT_BLE  &out OUT_USB  &none         &none         &bootloader   &bootloader       &none              &none  &none  &none  &to DEFAULT
                                   &none         &trans        &trans        &trans            &trans             &none
            >;
        };

        numpad {
            bindings = <
       &none  &none  &none  &none  &none  &kp N1     &kp N2   &kp N3  &kp PLUS   &kp BSLH
&none  &none  &none  &none  &none  &none  &kp N4     &kp N5   &kp N6  &kp MINUS  &none     &none
&none  &none  &none  &none  &none  &none  &kp N7     &kp N8   &kp N9  &kp EQUAL  &none     &to 0
                     &none  &none  &none  &kp COMMA  &kp DOT  &kp N0
            >;
        };
    };
};
